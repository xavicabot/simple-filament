<?php

namespace App\Filament\Resources\PostResource\Pages;

use App\Filament\Resources\PostResource;
use Filament\Actions;
use Filament\Resources\Pages\CreateRecord;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Support\Str;

class CreatePost extends CreateRecord
{
    use CreateRecord\Concerns\Translatable;

    protected function getHeaderActions(): array
    {
        return [
            Actions\LocaleSwitcher::make(),
        ];
    }

    protected static string $resource = PostResource::class;

    protected function mutateFormDataBeforeCreate(array $data): array
    {
        $data['content'] = $this->decodeBlocks($data['content']);

        return parent::mutateFormDataBeforeCreate($data); // TODO: Change the autogenerated stub
    }

    private function decodeBlocks(array $document): array
    {
        $content = $document['content'];

        foreach ($content as $k => $block) {
            if ($block['type'] === 'tiptapBlock') {
                if (is_string($block['attrs']['data'])) {
                    $data = Str::of(json_decode('"'.$block['attrs']['data'].'"'))
                        ->after('JSON.parse(\'')
                        ->beforeLast('\')')
                        ->toString();

                    $content[$k]['attrs']['data'] = json_decode($data, true);
                }
                unset($content[$k]['attrs']['statePath']);
                unset($content[$k]['attrs']['preview']);
                unset($content[$k]['attrs']['label']);
            } elseif (array_key_exists('content', $block)) {
                $content[$k] = $this->decodeBlocks($block);
            }
        }

        $document['content'] = $content;

        return $document;
    }
}
